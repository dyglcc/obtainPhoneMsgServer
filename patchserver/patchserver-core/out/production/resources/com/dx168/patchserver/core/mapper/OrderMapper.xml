<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.


       CREATE TABLE `t_order` (
  `id`           INT         NOT NULL AUTO_INCREMENT,
  `parent_id`    INT                  DEFAULT NULL,
  `userid`    INT                  DEFAULT NULL,
  `amount`    VARCHAR(32)          NOT NULL,
  `uuid`        VARCHAR(64)          DEFAULT NULL,
  `pay_type`     int           DEFAULT 1,
  `pay_period`     int           DEFAULT 2,
  `product_type`     int           DEFAULT 1,
  `status`     int           DEFAULT NULL,
  `start_at`   DATETIME             DEFAULT NULL,
  `end_at`   DATETIME             DEFAULT NULL,
  `charge_at`   DATETIME             DEFAULT NULL,
  `create_at`   DATETIME             DEFAULT NULL,
  `update_at`   DATETIME             DEFAULT NULL,
  PRIMARY KEY (`id`),
)
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dx168.patchserver.core.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.dx168.patchserver.core.domain.Order" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="parent_id" property="parent_id" jdbcType="INTEGER" />
        <result column="created_at" property="created_at" />
        <result column="updated_at" property="updated_at" />
    </resultMap>

    <!--<select id="findByUsername" resultType="com.dx168.patchserver.core.domain.Order" resultMap="BaseResultMap" >-->
        <!--select * from t_order where username = #{username}-->
    <!--</select>-->
    <select id="findAllOrders" resultMap="BaseResultMap">
        select * from t_order where email = #{email} order by created_at desc ;
    </select>
    <select id="findUnpaysOrder" resultMap="BaseResultMap">
        select * from t_order where email = #{email} and status= 1 order by created_at desc limit 0,1;
    </select>
    <select id="findRunningOrders" resultMap="BaseResultMap">
        select * from t_order where email = #{email} and status= 2 or status = 3 order by created_at desc;
    </select>
    <select id="findPaidOrders" resultMap="BaseResultMap">
        select * from t_order where email = #{email} and status > 1 order by created_at desc;
    </select>

    <select id="findById" resultType="com.dx168.patchserver.core.domain.Order" resultMap="BaseResultMap" >
        select * from t_order where id = #{id}
    </select>
    <select id="findOrderByParentId" resultType="com.dx168.patchserver.core.domain.Order" resultMap="BaseResultMap" >
        select * from t_order where id = #{parent_id}
    </select>

    <update id="purchase" parameterType="com.dx168.patchserver.core.domain.Order" >
        UPDATE  t_order
        SET
        charge_at = #{charge_at,jdbcType=TIMESTAMP},
        pay_type = #{pay_type,jdbcType=INTEGER},
        start_at = #{start_at,jdbcType=TIMESTAMP},
        end_at = #{end_at,jdbcType=TIMESTAMP},
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
        uuid = #{uuid,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER}
        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateOrder2Using" parameterType="com.dx168.patchserver.core.domain.Order" >
        UPDATE  t_order
        SET
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER}
        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>
    <update id="setDone2LastOrder" parameterType="com.dx168.patchserver.core.domain.Order" >
        UPDATE  t_order
        SET
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER}
        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateTraffic" parameterType="com.dx168.patchserver.core.domain.Order" >
        UPDATE  t_order
        SET
        updated_at = #{updated_at,jdbcType=TIMESTAMP},
        traffic = #{traffic,jdbcType=BIGINT}
        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>


    <insert id="insert" parameterType="com.dx168.patchserver.core.domain.Order">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into t_order (
        parent_id, email, amount,created_at,product_type,pay_period
        )
        values (
        #{parent_id,jdbcType=INTEGER},
        #{email,jdbcType=VARCHAR},
        #{amount,jdbcType=DECIMAL},
        #{created_at,jdbcType=TIMESTAMP},
        #{product_type,jdbcType=INTEGER},
        #{pay_period,jdbcType=INTEGER}
        )
    </insert>

    <delete id="deleteById" >
        DELETE FROM t_order where id = #{id}
    </delete>
</mapper>
